{"version":3,"file":"static/chunks/pages/index-439c00663ff54dfc.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./stores/posts.ts","webpack://_N_E/./components/index/postCardGrid.tsx","webpack://_N_E/./components/index/imageSlider.tsx","webpack://_N_E/./pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { atom, selector } from 'recoil'\n\nexport interface PostsData {\n  category: string\n  files: PostData[]\n}\n\nexport interface PostData {\n  slug: string,\n  frontmatter: FrontMatter,\n  content: string\n}\n\nexport interface FrontMatter {\n  title: string\n  category: string\n  date: string\n  coverImage: string\n  summary?: string\n}\n\nexport const postsDataState = atom<PostsData[]>({\n  key: 'postsDataState',\n  default: []\n})\n\nconst sortByDate = (a: PostData, b: PostData) => {\n  if (a.frontmatter.date < b.frontmatter.date) {\n    return 1\n  }\n  if (a.frontmatter.date > b.frontmatter.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const postsDataSelector = selector({\n  key: 'postsDataSelector',\n  get: ({ get }) => {\n    const posts = get(postsDataState)\n    const categories = posts.map(post => post.category)\n    const files = posts.map(post => post.files).flat().sort(sortByDate)\n\n    return {\n      categories,\n      files\n    }\n  }\n})\n","import { NextPage } from 'next'\nimport { useRecoilValue } from 'recoil'\nimport { Box, Container, Image, Grid, GridItem, Text, Spacer, Flex } from '@chakra-ui/react'\n\nimport { PostData, postsDataSelector } from '../../stores/posts'\nimport Link from 'next/link'\nimport { useRef } from 'react'\n\nconst PostCardGrid = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n\n  return (\n    <Flex flexDirection='column' padding='0 4em 0 4em'>\n      <Text fontSize='4xl' textAlign='center' margin='2em 0 0em 0'>Recent Articles</Text>\n      <Text fontSize='xl' color='gray.400' textAlign='center' margin='0em 0 3em 0'>Various Articles</Text>\n      <Grid templateColumns={['repeat(1, 1fr)', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']} gap={6}>\n        {files.map((file, idx) => {\n          return (\n            <PostCard\n              key={idx}\n              data={file}>\n            </PostCard>\n          )\n        })}\n      </Grid>\n    </Flex>\n  )\n}\n\ninterface PostCardProps {\n  data: PostData\n}\n\nconst PostCard: NextPage<PostCardProps> = ({ data }) => {\n  const titleTextRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <Link href={`/post/${data.frontmatter.category}/${data.slug}`} passHref={true}>\n      <GridItem w='100%' h='480px' overflow='hidden' cursor='pointer' margin='0 0 2em 0'\n        onMouseOver={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'underline'\n          }\n        }}\n        onMouseOut={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'none'\n          }\n        }}\n      >\n        <Container width='100%' height='100%' padding='0'>\n          <Box width='100%' height='300px' borderRadius='16px'>\n            <Image\n              alt={`${data.frontmatter.category}-${data.slug}`}\n              src={`/_post/${data.frontmatter.category}/${data.slug}/${data.frontmatter.coverImage}`}\n              width='100%'\n              height='100%'\n              objectFit='cover'>\n            </Image>\n          </Box>\n          <Box width='100%' height='120px'>\n            <Spacer height='1em'></Spacer>\n            <Text className='title' ref={titleTextRef} fontSize='xl' color='black' fontWeight='medium'>\n              {data.frontmatter.title}\n            </Text>\n            <Spacer height='0.5em'></Spacer>\n            <Text className='summary' fontSize='sm' color='gray.600' fontWeight='light' textOverflow='ellipsis'>\n              {data.frontmatter.summary ? data.frontmatter.summary : ''}\n            </Text>\n            <Spacer height='1em'></Spacer>\n            <Text fontSize='sm' color='black' fontWeight='medium'>\n              {data.frontmatter.date}\n            </Text>\n          </Box>\n        </Container>\n      </GridItem>\n    </Link>\n  )\n}\n\nexport default PostCardGrid\n","import { Box, Flex, IconButton, Image, Text } from '@chakra-ui/react'\nimport Link from 'next/link'\nimport { useRef, useState } from 'react'\nimport { GrPrevious, GrNext } from 'react-icons/gr'\nimport { useRecoilValue } from 'recoil'\nimport { postsDataSelector } from '../../stores/posts'\n\nconst ImageSlider = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n  const topTen = files.slice(0, 10)\n  const imageSliderRef = useRef<HTMLDivElement>(null)\n  const imageBoxRef = useRef<HTMLDivElement>(null)\n  const [isPrevBtnShow, setIsPrevBtnShow] = useState<boolean>(false)\n  const [isNextBtnShow, setIsNextBtnShow] = useState<boolean>(true)\n\n  const sliderMove = (dir: number): void => {\n    if (imageSliderRef.current && imageBoxRef.current) {\n      const boxWidth: number = imageBoxRef.current.offsetWidth\n      let nextLeft = imageSliderRef.current.scrollLeft + (boxWidth * 2 * dir)\n      if (nextLeft > 0) {\n        setIsPrevBtnShow(true)\n      }\n      if (nextLeft < (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        setIsNextBtnShow(true)\n      }\n      if (nextLeft <= 0) {\n        nextLeft = 0\n        setIsPrevBtnShow(false)\n      } else if (nextLeft >= (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        nextLeft = imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth\n        setIsNextBtnShow(false)\n      }\n      imageSliderRef.current.scrollLeft = nextLeft\n    }\n  }\n\n  return (\n    <Flex position='relative' margin='0 0 4em 0'>\n      <Flex id='image-slider' ref={imageSliderRef} width='100%' padding='0 4em 0 4em' overflow='hidden' position='relative' scrollBehavior='smooth'>\n        {topTen.map((file, idx) => {\n          return (\n            <Link key={idx} href={`/post/${file.frontmatter.category}/${file.slug}`} passHref={true}>\n              <Box id='image-box' ref={imageBoxRef} width='480px' height='520px' position='relative' overflow='hidden' flexShrink='0' cursor='pointer'>\n                <Image\n                  alt={`${file.frontmatter.category}-${file.slug}`}\n                  src={`/_post/${file.frontmatter.category}/${file.slug}/${file.frontmatter.coverImage}`}\n                  width='100%'\n                  height='100%'\n                  borderRadius='none'\n                  objectFit='cover'\n                  transition='1s ease'\n                  opacity='1.0'\n                  _hover={{\n                    opacity: '0.8',\n                    transform: 'scale(1.3)',\n                    background: 'blackAlpha.600'\n                  }}\n                ></Image>\n                <Box\n                  position='absolute'\n                  top='0'\n                  left='0'\n                  width='100%'\n                  height='100%'\n                  background='blackAlpha.500'\n                  pointerEvents='none'\n                ></Box>\n                <Text\n                  fontSize='4xl'\n                  fontWeight='medium'\n                  textAlign='center'\n                  position='absolute'\n                  width='100%'\n                  padding='0 1em 0 1em'\n                  top='50%'\n                  left='50%'\n                  transform='translate(-50%, -50%)'\n                  color='white'\n                  pointerEvents='none'\n                >\n                  {file.frontmatter.title}\n                </Text>\n              </Box>\n            </Link>\n          )\n        })}\n      </Flex>\n      <div>\n        <IconButton\n          aria-label='prev'\n          display={isPrevBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(-1)}\n          width={['1em', '2em', '2em', '3em', '3em']}\n          height={['1em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          icon={<GrPrevious opacity='0.7'></GrPrevious>}\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          left='4%'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        ></IconButton>\n        <IconButton\n          aria-label='next'\n          display={isNextBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(1)}\n          width={['1em', '2em', '2em', '3em', '3em']}\n          height={['1em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          icon={<GrNext opacity='0.7'></GrNext>}\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          right='4%'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        ></IconButton>\n      </div>\n    </Flex>\n  )\n}\n\nexport default ImageSlider\n","import type { NextPage } from 'next'\nimport { useEffect } from 'react'\nimport { useSetRecoilState } from 'recoil'\n\nimport { Box, Flex, Text } from '@chakra-ui/react'\n\nimport { PostsData, postsDataState } from '../stores/posts'\nimport PostCardGrid from '../components/index/postCardGrid'\nimport ImageSlider from '../components/index/imageSlider'\nimport { getPosts } from '../utils/loadMarkdownFiles'\n\ninterface HomeProps {\n  posts: PostsData[]\n}\n\nconst Home: NextPage<HomeProps> = ({ posts }) => {\n  const setPostsData = useSetRecoilState(postsDataState)\n\n  useEffect(() => {\n    setPostsData(posts)\n  }, [posts, setPostsData])\n\n  return (\n    <Box padding='0em 0em 4em 0em'>\n      <Flex flexDirection='column' justifyContent='center' alignItems='flex-start' padding='1em 4em 4em 4em'>\n        <Text fontSize='6xl' color='black' fontWeight='normal' padding='0'>\n          This is tech blog\n        </Text>\n        <Text fontSize='5xl' color='blackAlpha.600' fontWeight='light'>\n          Hello World!\n        </Text>\n        <Text fontSize='5xl' color='blackAlpha.300' fontWeight='light'>\n          This is git blog\n        </Text>\n      </Flex>\n      <ImageSlider></ImageSlider>\n      <PostCardGrid></PostCardGrid>\n    </Box>\n  )\n}\n\nexport async function getStaticProps () {\n  return {\n    props: {\n      posts: getPosts()\n    }\n  }\n}\n\nexport default Home\n"],"names":["window","__NEXT_P","push","postsDataState","atom","key","default","sortByDate","a","b","frontmatter","date","postsDataSelector","selector","get","posts","categories","map","post","category","files","flat","sort","PostCard","data","titleTextRef","useRef","Link","href","slug","passHref","GridItem","w","h","overflow","cursor","margin","onMouseOver","current","style","textDecoration","onMouseOut","Container","width","height","padding","Box","borderRadius","Image","alt","src","coverImage","objectFit","Spacer","Text","className","ref","fontSize","color","fontWeight","title","textOverflow","summary","useRecoilValue","Flex","flexDirection","textAlign","Grid","templateColumns","gap","file","idx","topTen","slice","imageSliderRef","imageBoxRef","useState","isPrevBtnShow","setIsPrevBtnShow","isNextBtnShow","setIsNextBtnShow","sliderMove","dir","boxWidth","offsetWidth","nextLeft","scrollLeft","scrollWidth","clientWidth","position","id","scrollBehavior","flexShrink","transition","opacity","_hover","transform","background","top","left","pointerEvents","div","IconButton","aria-label","display","onClick","icon","GrPrevious","GrNext","right","setPostsData","useSetRecoilState","useEffect","justifyContent","alignItems","ImageSlider","PostCardGrid"],"sourceRoot":""}