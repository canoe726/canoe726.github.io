{"version":3,"file":"static/chunks/pages/index-da59467ae3588d1b.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./stores/posts.ts","webpack://_N_E/./components/index/postCardGrid.tsx","webpack://_N_E/./components/index/imageSlider.tsx","webpack://_N_E/./pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { atom, selector } from 'recoil'\n\nexport interface PostsData {\n  category: string;\n  files: PostData[];\n}\n\nexport interface PostData {\n  slug: string;\n  frontmatter: FrontMatter;\n  content: string;\n}\n\nexport interface FrontMatter {\n  title: string;\n  category: string;\n  date: string;\n  coverImage: string;\n  summary?: string;\n  shortcut?: string;\n}\n\nexport const postsDataState = atom<PostsData[]>({\n  key: 'postsDataState',\n  default: []\n})\n\nconst sortByDate = (a: PostData, b: PostData) => {\n  if (a.frontmatter.date < b.frontmatter.date) {\n    return 1\n  }\n  if (a.frontmatter.date > b.frontmatter.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const postsDataSelector = selector({\n  key: 'postsDataSelector',\n  get: ({ get }) => {\n    const posts = get(postsDataState)\n    const categories = posts.map(post => post.category)\n    const files = posts.map(post => post.files).flat().sort(sortByDate)\n\n    return {\n      categories,\n      files\n    }\n  }\n})\n","import Image from 'next/image'\nimport { NextPage } from 'next'\nimport { useRecoilValue } from 'recoil'\nimport { Box, Container, Grid, GridItem, Text, Spacer, Flex } from '@chakra-ui/react'\n\nimport { PostData, postsDataSelector } from '../../stores/posts'\nimport Link from 'next/link'\nimport { useRef } from 'react'\nimport { imageLoader } from '../../utils/loader'\n\nconst PostCardGrid = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n\n  return (\n    <Flex flexDirection='column' padding={['0 1.5em 0 1.5em', '0 2.5em 0 2.5em', '0 4em 0 4em']}>\n      <Text fontSize={['4xl', '4xl', '5xl']} textAlign='center' fontWeight='normal' margin='1em 0 0em 0'>Recent Articles</Text>\n      <Text fontSize={['xl', 'xl', '2xl']} color='gray.400' fontWeight='light' textAlign='center' margin='0em 0 4em 0'>Various Articles</Text>\n      <Grid templateColumns={['repeat(1, 1fr)', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']} gap={6}>\n        {files.map((file, idx) => {\n          return (\n            <PostCard\n              key={idx}\n              data={file}>\n            </PostCard>\n          )\n        })}\n      </Grid>\n    </Flex>\n  )\n}\n\ninterface PostCardProps {\n  data: PostData;\n}\n\nconst PostCard: NextPage<PostCardProps> = ({ data }) => {\n  const titleTextRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <Link href={`/post/${data.frontmatter.category}/${data.slug}`} passHref={true}>\n      <GridItem w='100%' h='480px' overflow='hidden' cursor='pointer' margin='0 0 2em 0'\n        onMouseOver={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'underline'\n          }\n        }}\n        onMouseOut={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'none'\n          }\n        }}\n      >\n        <Container width='100%' height='100%' padding='0'>\n          <Box width='100%' height='300px' borderRadius='16px' position='relative'>\n            <Image\n              alt={`${data.frontmatter.category}-${data.slug}`}\n              src={`/post/${data.frontmatter.category}/${data.slug}/${data.frontmatter.coverImage}`}\n              layout='fill'\n              objectFit='cover'\n              loader={imageLoader}\n            >\n            </Image>\n          </Box>\n          <Box width='100%' height='120px'>\n            <Spacer height='0.5em'></Spacer>\n            <Text className='title' ref={titleTextRef} fontSize='2xl' color='black' fontWeight='normal'>\n              {data.frontmatter.title}\n            </Text>\n            <Spacer height='0.1em'></Spacer>\n            <Text className='summary' fontSize='md' color='gray.600' fontWeight='light' textOverflow='ellipsis'>\n              {data.frontmatter.summary ? data.frontmatter.summary : ''}\n            </Text>\n            <Spacer height='0.3em'></Spacer>\n            <Text fontSize='sm' fontWeight='light' color='gray.400'>\n              {data.frontmatter.date}\n            </Text>\n          </Box>\n        </Container>\n      </GridItem>\n    </Link>\n  )\n}\n\nexport default PostCardGrid\n","import Image from 'next/image'\nimport { Box, Flex, Text } from '@chakra-ui/react'\nimport Link from 'next/link'\nimport { useRef, useState } from 'react'\nimport { VscArrowLeft, VscArrowRight } from 'react-icons/vsc'\nimport { useRecoilValue } from 'recoil'\nimport { postsDataSelector } from '../../stores/posts'\nimport { imageLoader } from '../../utils/loader'\n\nconst ImageSlider = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n  const topTen = files.slice(0, 10)\n  const imageSliderRef = useRef<HTMLDivElement>(null)\n  const imageBoxRef = useRef<HTMLDivElement>(null)\n  const [isPrevBtnShow, setIsPrevBtnShow] = useState<boolean>(false)\n  const [isNextBtnShow, setIsNextBtnShow] = useState<boolean>(true)\n\n  const sliderMove = (dir: number): void => {\n    if (imageSliderRef.current && imageBoxRef.current) {\n      const boxWidth: number = imageBoxRef.current.offsetWidth\n      let nextLeft = imageSliderRef.current.scrollLeft + (boxWidth * 1.3 * dir)\n      if (nextLeft > 0) {\n        setIsPrevBtnShow(true)\n      }\n      if (nextLeft < (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        setIsNextBtnShow(true)\n      }\n      if (nextLeft <= 0) {\n        nextLeft = 0\n        setIsPrevBtnShow(false)\n      } else if (nextLeft >= (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        nextLeft = imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth\n        setIsNextBtnShow(false)\n      }\n      imageSliderRef.current.scrollLeft = nextLeft\n    }\n  }\n\n  return (\n    <Flex position='relative' margin='0 0 4em 0'>\n      <Flex id='image-slider' ref={imageSliderRef} width='100%' padding={['0 1.5em 0 1.5em', '0 2.5em 0 2.5em', '0 4em 0 4em']} overflow='hidden' position='relative' scrollBehavior='smooth'>\n        {topTen.map((file, idx) => {\n          return (\n            <Link key={idx} href={`/post/${file.frontmatter.category}/${file.slug}`} passHref={true}>\n              <Box\n                id='image-box'\n                ref={imageBoxRef}\n                width={['240px', '360px', '480px']}\n                height={['320px', '400px', '520px']}\n                position='relative'\n                overflow='hidden'\n                flexShrink='0'\n                cursor='pointer'\n              >\n                <Box\n                  position='relative'\n                  width='100%'\n                  height='100%'\n                  transition='1s ease'\n                  opacity='1.0'\n                  _hover={{\n                    opacity: '0.8',\n                    transform: 'scale(1.3)',\n                    background: 'blackAlpha.600'\n                  }}\n                >\n                  <Image\n                    alt={`${file.frontmatter.category}-${file.slug}`}\n                    src={`/post/${file.frontmatter.category}/${file.slug}/${file.frontmatter.coverImage}`}\n                    layout='fill'\n                    objectFit='cover'\n                    loader={imageLoader}\n                  ></Image>\n                </Box>\n                <Box\n                  position='absolute'\n                  top='0'\n                  left='0'\n                  width='100%'\n                  height='100%'\n                  background='blackAlpha.500'\n                  pointerEvents='none'\n                ></Box>\n                <Text\n                  className='title'\n                  fontSize={['2xl', '3xl', '4xl']}\n                  fontWeight='normal'\n                  textAlign='center'\n                  position='absolute'\n                  width='100%'\n                  padding='0 1em 0 1em'\n                  top='50%'\n                  left='50%'\n                  transform='translate(-50%, -50%)'\n                  color='white'\n                  pointerEvents='none'\n                >\n                  {file.frontmatter.title}\n                </Text>\n              </Box>\n            </Link>\n          )\n        })}\n      </Flex>\n      <div>\n        <Box\n          cursor='pointer'\n          aria-label='prev'\n          display={isPrevBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(-1)}\n          width={['1.5em', '2em', '2em', '3em', '3em']}\n          height={['1.5em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          left='4%'\n          outline='none'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        >\n          <Box display='flex' justifyContent='center' alignItems='center' width='100%' height='100%'>\n            <VscArrowLeft opacity='0.7'></VscArrowLeft>\n          </Box>\n        </Box>\n        <Box\n          cursor='pointer'\n          aria-label='next'\n          display={isNextBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(1)}\n          width={['1.5em', '2em', '2em', '3em', '3em']}\n          height={['1.5em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          right='4%'\n          outline='none'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        >\n          <Box display='flex' justifyContent='center' alignItems='center' width='100%' height='100%'>\n            <VscArrowRight opacity='0.7'></VscArrowRight>\n          </Box>\n        </Box>\n      </div>\n    </Flex>\n  )\n}\n\nexport default ImageSlider\n","import type { NextPage } from 'next'\nimport { useEffect } from 'react'\nimport { useSetRecoilState } from 'recoil'\n\nimport { Box, Flex, Text } from '@chakra-ui/react'\n\nimport { PostsData, postsDataState } from '../stores/posts'\nimport PostCardGrid from '../components/index/postCardGrid'\nimport ImageSlider from '../components/index/imageSlider'\nimport { getPosts } from '../utils/loadMarkdownFiles'\n\ninterface HomeProps {\n  posts: PostsData[];\n}\n\nconst Home: NextPage<HomeProps> = ({ posts }) => {\n  const setPostsData = useSetRecoilState(postsDataState)\n\n  useEffect(() => {\n    setPostsData(posts)\n  }, [posts, setPostsData])\n\n  return (\n    <Box padding='84px 0em 4em 0em'>\n      <Flex flexDirection='column' justifyContent='center' alignItems='flex-start' padding={['1em 1.5em 4em 1.5em', '1em 2.5em 4em 2.5em', '1em 4em 4em 4em']}>\n        <Text fontSize={['5xl', '5xl', '6xl']} color='black' fontWeight='normal' padding='0'>\n          This is Blog\n        </Text>\n        <Text fontSize={['4xl', '4xl', '5xl']} color='gray.600' fontWeight='light'>\n          Anything you can write\n        </Text>\n        <Text fontSize={['4xl', '4xl', '5xl']} color='gray.300' fontWeight='light'>\n          Hello World!\n        </Text>\n      </Flex>\n      <ImageSlider></ImageSlider>\n      <PostCardGrid></PostCardGrid>\n    </Box>\n  )\n}\n\nexport async function getStaticProps () {\n  return {\n    props: {\n      posts: getPosts()\n    }\n  }\n}\n\nexport default Home\n"],"names":["window","__NEXT_P","push","postsDataState","atom","key","default","sortByDate","a","b","frontmatter","date","postsDataSelector","selector","get","posts","categories","map","post","category","files","flat","sort","PostCard","data","titleTextRef","useRef","Link","href","slug","passHref","GridItem","w","h","overflow","cursor","margin","onMouseOver","current","style","textDecoration","onMouseOut","Container","width","height","padding","Box","borderRadius","position","Image","alt","src","coverImage","layout","objectFit","loader","imageLoader","Spacer","Text","className","ref","fontSize","color","fontWeight","title","textOverflow","summary","useRecoilValue","Flex","flexDirection","textAlign","Grid","templateColumns","gap","file","idx","topTen","slice","imageSliderRef","imageBoxRef","useState","isPrevBtnShow","setIsPrevBtnShow","isNextBtnShow","setIsNextBtnShow","sliderMove","dir","boxWidth","offsetWidth","nextLeft","scrollLeft","scrollWidth","clientWidth","id","scrollBehavior","flexShrink","transition","opacity","_hover","transform","background","top","left","pointerEvents","div","aria-label","display","onClick","outline","justifyContent","alignItems","VscArrowLeft","right","VscArrowRight","setPostsData","useSetRecoilState","useEffect","ImageSlider","PostCardGrid"],"sourceRoot":""}