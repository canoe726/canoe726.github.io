{"version":3,"file":"static/chunks/pages/category/[category]-64818496401e4011.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,uBACA,WACE,OAAO,EAAQ,U,oJCiIvB,UArH0D,SACrD,G,IAAHC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAEMC,GAAeC,EAAAA,EAAAA,QAA+B,IAcpD,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,SAASC,eAAe,aAIzC,OAHIF,IACFA,EAASG,UAAYR,GAEhB,WACDK,IACFA,EAASG,UAAY,OAGxB,CAACR,KAEE,QACHS,EAAAA,GAAI,CAACC,cAAc,SAASC,QAAQ,sBAAsBC,UAAU,OAAOC,gBAAgB,mB,mBACzFC,EAAAA,GAAG,CAACC,MAAM,OAAOC,OAAO,OAAOC,WAAW,QAAQC,SAAS,WAAWC,IAAI,IAAIC,KAAK,IAAIC,cAAc,OAAOC,aAAa,iCACzHrB,EAAMsB,KAAI,SAACC,EAAMC,GAChB,OAAM,QACHC,EAAAA,QAAI,CAAWC,KAAO,SAAqCH,OAA7BA,EAAKI,YAAY5B,SAAS,KAAa,OAAVwB,EAAKK,MAAQC,UAAQ,E,kBAC9EhB,EAAAA,GAAG,CACFiB,OAAO,UACPC,QAAQ,OACRjB,MAAM,OACNC,OAAO,cACPiB,OAAO,YACPpB,gBAAgB,QAChBS,aAAa,+BACbY,YAAa,WACPhC,EAAaiC,UACfjC,EAAaiC,QAAQV,GAAKW,MAAMC,eAAiB,cAGrDC,WAAY,WACNpC,EAAaiC,UACfjC,EAAaiC,QAAQV,GAAKW,MAAMC,eAAiB,S,mBAIpD5B,EAAAA,GAAI,CAAC8B,KAAK,IAAI7B,cAAc,SAASC,QAAQ,M,mBAC3C6B,EAAAA,GAAI,CAACC,IAAKC,SAAAA,GAAQxC,EAAaiC,QAAQV,GAAOiB,GAAOC,SAAS,MAAMC,WAAW,S,SAAUpB,EAAKI,YAAYiB,S,QAC1GL,EAAAA,GAAI,CAACM,UAAU,QAAQH,SAAS,KAAKC,WAAW,Q,SAASpB,EAAKI,YAAYmB,W,QAC1EP,EAAAA,GAAI,CAACM,UAAU,QAAQH,SAAS,UAAUK,MAAM,W,SAAYxB,EAAKI,YAAYqB,W,QAE/ExC,EAAAA,GAAI,CAAC8B,KAAK,IAAIrB,SAAS,WAAWgC,eAAe,SAASC,WAAW,S,kBACnErC,EAAAA,GAAG,C,kBACDsC,EAAAA,QAAK,CACJC,IAAM,GAA+B7B,OAA7BA,EAAKI,YAAY5B,SAAS,KAAa,OAAVwB,EAAKK,MAC1CyB,IAAM,SAAqC9B,OAA7BA,EAAKI,YAAY5B,SAAS,KAAgBwB,OAAbA,EAAKK,KAAK,KAA+B,OAA5BL,EAAKI,YAAY2B,YACzExC,MAAM,QACNC,OAAO,QACPwC,UAAU,QACVC,OAAQC,EAAAA,YAjCPjC,Y","sources":["webpack://_N_E/?68e6","webpack://_N_E/./pages/category/[category].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/category/[category]\",\n      function () {\n        return require(\"private-next-pages/category/[category].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/category/[category]\"])\n      });\n    }\n  ","import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { Box, Flex, Text } from '@chakra-ui/react'\nimport { NextPage } from 'next'\nimport { PostData } from '../../stores/posts'\nimport { useEffect, useRef } from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { imageLoader } from '../../utils/loader'\n\ninterface CategoryItemListProps {\n  category: string;\n  files: PostData[];\n}\n\nconst CategoryItemList: NextPage<CategoryItemListProps> = ({\n  category,\n  files\n}) => {\n  const titleTextRef = useRef<HTMLParagraphElement[]>([])\n\n  useEffect(() => {\n    const topTitle = document.getElementById('top-title')\n    if (topTitle) {\n      topTitle.innerHTML = category\n    }\n    return () => {\n      if (topTitle) {\n        topTitle.innerHTML = ''\n      }\n    }\n  }, [category])\n\n  return (\n    <Flex flexDirection='column' padding='112px 12em 2em 12em' minHeight='85vh' backgroundColor='rgba(0,0,0,0.01)'>\n      <Box width='100%' height='64px' background='white' position='absolute' top='0' left='0' pointerEvents='none' borderBottom='1px solid rgba(0, 0, 0, 0.2)'></Box>\n      {files.map((file, idx) => {\n        return (\n          <Link key={idx} href={`/post/${file.frontmatter.category}/${file.slug}`} passHref>\n            <Box\n              cursor='pointer'\n              display='flex'\n              width='100%'\n              height='fit-content'\n              margin='0 0 2em 0'\n              backgroundColor='white'\n              borderBottom='1px solid rgba(0, 0, 0, 0.1)'\n              onMouseOver={() => {\n                if (titleTextRef.current) {\n                  titleTextRef.current[idx].style.textDecoration = 'underline'\n                }\n              }}\n              onMouseOut={() => {\n                if (titleTextRef.current) {\n                  titleTextRef.current[idx].style.textDecoration = 'none'\n                }\n              }}\n            >\n              <Flex flex='3' flexDirection='column' padding='2em'>\n                <Text ref={el => { titleTextRef.current[idx] = el! }} fontSize='2xl' fontWeight='medium'>{file.frontmatter.title}</Text>\n                <Text marginTop='0.5em' fontSize='sm' fontWeight='light'>{file.frontmatter.summary}</Text>\n                <Text marginTop='1.5em' fontSize='x-small' color='gray.400'>{file.frontmatter.date}</Text>\n              </Flex>\n              <Flex flex='1' position='relative' justifyContent='center' alignItems='center'>\n                <Box>\n                  <Image\n                    alt={`${file.frontmatter.category}-${file.slug}`}\n                    src={`/post/${file.frontmatter.category}/${file.slug}/${file.frontmatter.coverImage}`}\n                    width='140px'\n                    height='140px'\n                    objectFit='cover'\n                    loader={imageLoader}\n                  ></Image>\n                </Box>\n              </Flex>\n            </Box>\n          </Link>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport async function getStaticPaths () {\n  const files = fs.readdirSync(path.join('./public/post'))\n  const paths = files.map(dirName => {\n    const dirs = fs.readdirSync(path.join(`./public/post/${dirName}`))\n    const slugs = dirs.map(dir => {\n      return dir.replace('.md', '')\n    })\n    const params = slugs.map((slug) => {\n      return {\n        params: {\n          category: dirName,\n          slug: slug\n        }\n      }\n    })\n    return params\n  })\n  return {\n    paths: paths.flat(),\n    fallback: false\n  }\n}\n\ninterface getStaticPropsProperty {\n  params: {\n    category: string;\n  }\n}\n\nexport async function getStaticProps ({ params: { category } }: getStaticPropsProperty) {\n  const categoryDirs = fs.readdirSync(path.join(`./public/post/${category}`))\n  const files = categoryDirs.map((categoryDir) => {\n    const markdownWithMeta = fs.readFileSync(path.join(`./public/post/${category}/${categoryDir}`, `${categoryDir}.md`), 'utf-8')\n    const { data: frontmatter, content } = matter(markdownWithMeta)\n    return {\n      slug: categoryDir,\n      frontmatter,\n      content\n    }\n  })\n\n  return {\n    props: {\n      category: category,\n      files: files\n    }\n  }\n}\n\nexport default CategoryItemList\n"],"names":["window","__NEXT_P","push","category","files","titleTextRef","useRef","useEffect","topTitle","document","getElementById","innerHTML","Flex","flexDirection","padding","minHeight","backgroundColor","Box","width","height","background","position","top","left","pointerEvents","borderBottom","map","file","idx","Link","href","frontmatter","slug","passHref","cursor","display","margin","onMouseOver","current","style","textDecoration","onMouseOut","flex","Text","ref","el","fontSize","fontWeight","title","marginTop","summary","color","date","justifyContent","alignItems","Image","alt","src","coverImage","objectFit","loader","imageLoader"],"sourceRoot":""}