{"version":3,"file":"static/chunks/pages/category/[category]-24d394e5288a757c.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,uBACA,WACE,OAAO,EAAQ,U,8JC4IvB,UA/H0D,SACrD,G,IAAHC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAEMC,GAAeC,EAAAA,EAAAA,QAA+B,IAcpD,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,SAASC,eAAe,aAIzC,OAHIF,IACFA,EAASG,UAAYR,GAEhB,WACDK,IACFA,EAASG,UAAY,OAGxB,CAACR,KAEE,c,mBAEDS,EAAAA,QAAI,C,mBACFC,QAAK,C,SAAG,GAAuCV,OAArCA,EAASW,MAAM,EAAG,GAAGC,eAAkC,OAAlBZ,EAASW,MAAM,O,QAC9DE,OAAI,CAACC,KAAK,cAAcC,QAAU,kBAA0B,OAATf,S,QAErDgB,EAAAA,GAAI,CAACC,cAAc,SAASC,QAAS,CAAC,uBAAwB,uBAAwB,oBAAqB,qBAAsBC,UAAU,OAAOC,gBAAgB,mB,mBAChKC,EAAAA,GAAG,CAACC,MAAM,OAAOC,OAAO,OAAOC,WAAW,QAAQC,SAAS,WAAWC,IAAI,IAAIC,KAAK,IAAIC,cAAc,OAAOC,aAAa,iCACzH5B,EAAM6B,KAAI,SAACC,EAAMC,GAChB,OAAM,QACHC,EAAAA,QAAI,CAAWC,KAAO,SAAqCH,OAA7BA,EAAKI,YAAYnC,SAAS,KAAa,OAAV+B,EAAKK,MAAQC,UAAQ,E,kBAC9EhB,EAAAA,GAAG,CACFiB,OAAO,UACPC,QAAQ,OACRjB,MAAM,OACNC,OAAQ,CAAC,QAAS,QAAS,SAC3BiB,SAAS,SACTC,OAAO,YACPrB,gBAAgB,QAChBS,aAAa,+BACba,YAAa,WACPxC,EAAayC,UACfzC,EAAayC,QAAQX,GAAKY,MAAMC,eAAiB,cAGrDC,WAAY,WACN5C,EAAayC,UACfzC,EAAayC,QAAQX,GAAKY,MAAMC,eAAiB,S,mBAIpD7B,EAAAA,GAAI,CAAC+B,KAAM,CAAC,MAAO,MAAO,KAAM9B,cAAc,SAASC,QAAS,CAAC,sBAAuB,sBAAuB,O,mBAC7G8B,EAAAA,GAAI,CAACC,UAAU,QAAQC,IAAKC,SAAAA,GAAQjD,EAAayC,QAAQX,GAAOmB,GAAO5B,OAAO,cAAc6B,SAAU,CAAC,KAAM,KAAM,OAAQC,WAAW,S,SAAUtB,EAAKI,YAAYzB,S,QACjKsC,EAAAA,GAAI,CAACC,UAAU,UAAUK,UAAU,QAAQF,SAAS,KAAKC,WAAW,QAAQE,aAAa,WAAWf,SAAS,SAASgB,MAAM,W,SAAYzB,EAAKI,YAAYsB,W,QACzJT,EAAAA,GAAI,CAACM,UAAU,QAAQF,SAAS,UAAUC,WAAW,QAAQG,MAAM,W,SAAYzB,EAAKI,YAAYuB,W,QAElG1C,EAAAA,GAAI,CAAC+B,KAAM,CAAC,MAAO,MAAO,KAAMtB,SAAS,WAAWkC,eAAe,SAASC,WAAW,SAAS1C,QAAS,CAAC,YAAa,YAAa,e,kBAClIG,EAAAA,GAAG,CACFC,MAAO,CAAC,QAAS,QAAS,SAC1BC,OAAQ,CAAC,QAAS,QAAS,SAC3BE,SAAS,W,kBAERoC,EAAAA,QAAK,CACJC,IAAM,GAA+B/B,OAA7BA,EAAKI,YAAYnC,SAAS,KAAa,OAAV+B,EAAKK,MAC1C2B,IAAM,SAAqChC,OAA7BA,EAAKI,YAAYnC,SAAS,KAAgB+B,OAAbA,EAAKK,KAAK,KAA+B,OAA5BL,EAAKI,YAAY6B,YACzEC,OAAO,OACPC,UAAU,QACVC,OAAQC,EAAAA,YArCPpC,e","sources":["webpack://_N_E/?68e6","webpack://_N_E/./pages/category/[category].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/category/[category]\",\n      function () {\n        return require(\"private-next-pages/category/[category].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/category/[category]\"])\n      });\n    }\n  ","import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { Box, Flex, Text } from '@chakra-ui/react'\nimport { NextPage } from 'next'\nimport { PostData } from '../../stores/posts'\nimport { useEffect, useRef } from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { imageLoader } from '../../utils/loader'\nimport Head from 'next/head'\n\ninterface CategoryItemListProps {\n  category: string;\n  files: PostData[];\n}\n\nconst CategoryItemList: NextPage<CategoryItemListProps> = ({\n  category,\n  files\n}) => {\n  const titleTextRef = useRef<HTMLParagraphElement[]>([])\n\n  useEffect(() => {\n    const topTitle = document.getElementById('top-title')\n    if (topTitle) {\n      topTitle.innerHTML = category\n    }\n    return () => {\n      if (topTitle) {\n        topTitle.innerHTML = ''\n      }\n    }\n  }, [category])\n\n  return (\n    <>\n      <Head>\n        <title>{`${category.slice(0, 1).toUpperCase()}${category.slice(1)}`}</title>\n        <meta name=\"description\" content={`This is Blog - ${category}`}></meta>\n      </Head>\n      <Flex flexDirection='column' padding={['96px 1.5em 2em 1.5em', '96px 2.5em 2em 2.5em', '112px 4em 2em 4em', '112px 8em 2em 8em']} minHeight='85vh' backgroundColor='rgba(0,0,0,0.05)'>\n        <Box width='100%' height='64px' background='white' position='absolute' top='0' left='0' pointerEvents='none' borderBottom='1px solid rgba(0, 0, 0, 0.2)'></Box>\n        {files.map((file, idx) => {\n          return (\n            <Link key={idx} href={`/post/${file.frontmatter.category}/${file.slug}`} passHref>\n              <Box\n                cursor='pointer'\n                display='flex'\n                width='100%'\n                height={['180px', '180px', '240px']}\n                overflow='hidden'\n                margin='0 0 2em 0'\n                backgroundColor='white'\n                borderBottom='1px solid rgba(0, 0, 0, 0.1)'\n                onMouseOver={() => {\n                  if (titleTextRef.current) {\n                    titleTextRef.current[idx].style.textDecoration = 'underline'\n                  }\n                }}\n                onMouseOut={() => {\n                  if (titleTextRef.current) {\n                    titleTextRef.current[idx].style.textDecoration = 'none'\n                  }\n                }}\n              >\n                <Flex flex={['2.5', '2.5', '3']} flexDirection='column' padding={['2em 1.2em 2em 1.2em', '2em 1.2em 2em 1.2em', '2em']}>\n                  <Text className='title' ref={el => { titleTextRef.current[idx] = el! }} height='fit-content' fontSize={['lg', 'lg', '2xl']} fontWeight='normal'>{file.frontmatter.title}</Text>\n                  <Text className='summary' marginTop='0.5em' fontSize='sm' fontWeight='light' textOverflow='ellipsis' overflow='hidden' color='gray.600'>{file.frontmatter.summary}</Text>\n                  <Text marginTop='1.5em' fontSize='x-small' fontWeight='light' color='gray.400'>{file.frontmatter.date}</Text>\n                </Flex>\n                <Flex flex={['1.5', '1.5', '1']} position='relative' justifyContent='center' alignItems='center' padding={['0 1em 0 0', '0 1em 0 0', '0 1.5em 0 0']}>\n                  <Box\n                    width={['100px', '120px', '180px']}\n                    height={['100px', '120px', '180px']}\n                    position='relative'\n                  >\n                    <Image\n                      alt={`${file.frontmatter.category}-${file.slug}`}\n                      src={`/post/${file.frontmatter.category}/${file.slug}/${file.frontmatter.coverImage}`}\n                      layout='fill'\n                      objectFit='cover'\n                      loader={imageLoader}\n                    ></Image>\n                  </Box>\n                </Flex>\n              </Box>\n            </Link>\n          )\n        })}\n      </Flex>\n    </>\n  )\n}\n\nexport async function getStaticPaths () {\n  const files = fs.readdirSync(path.join('./public/post'))\n  const paths = files.map(dirName => {\n    const dirs = fs.readdirSync(path.join(`./public/post/${dirName}`))\n    const slugs = dirs.map(dir => {\n      return dir.replace('.md', '')\n    })\n    const params = slugs.map((slug) => {\n      return {\n        params: {\n          category: dirName,\n          slug: slug\n        }\n      }\n    })\n    return params\n  })\n  return {\n    paths: paths.flat(),\n    fallback: false\n  }\n}\n\ninterface getStaticPropsProperty {\n  params: {\n    category: string;\n  }\n}\n\nexport async function getStaticProps ({ params: { category } }: getStaticPropsProperty) {\n  const categoryDirs = fs.readdirSync(path.join(`./public/post/${category}`))\n  const files = categoryDirs.map((categoryDir) => {\n    const markdownWithMeta = fs.readFileSync(path.join(`./public/post/${category}/${categoryDir}`, `${categoryDir}.md`), 'utf-8')\n    const { data: frontmatter, content } = matter(markdownWithMeta)\n    return {\n      slug: categoryDir,\n      frontmatter,\n      content\n    }\n  })\n\n  return {\n    props: {\n      category: category,\n      files: files\n    }\n  }\n}\n\nexport default CategoryItemList\n"],"names":["window","__NEXT_P","push","category","files","titleTextRef","useRef","useEffect","topTitle","document","getElementById","innerHTML","Head","title","slice","toUpperCase","meta","name","content","Flex","flexDirection","padding","minHeight","backgroundColor","Box","width","height","background","position","top","left","pointerEvents","borderBottom","map","file","idx","Link","href","frontmatter","slug","passHref","cursor","display","overflow","margin","onMouseOver","current","style","textDecoration","onMouseOut","flex","Text","className","ref","el","fontSize","fontWeight","marginTop","textOverflow","color","summary","date","justifyContent","alignItems","Image","alt","src","coverImage","layout","objectFit","loader","imageLoader"],"sourceRoot":""}