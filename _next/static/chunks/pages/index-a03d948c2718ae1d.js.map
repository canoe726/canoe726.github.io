{"version":3,"file":"static/chunks/pages/index-a03d948c2718ae1d.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./components/shared/useInfinityScroll.tsx","webpack://_N_E/./components/index/postCardGrid.tsx","webpack://_N_E/./components/index/imageSlider.tsx","webpack://_N_E/./pages/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { useCallback, useEffect, useState } from 'react'\n\nlet throttle: ReturnType<typeof setTimeout> | null = null\n\nfunction useInfinityScroll<T> (data: T[], loadSize: number): { data: T[] } {\n  const [sliceLen, setSliceLen] = useState<number>(loadSize)\n  const [lazyData, setLazyData] = useState<any[]>([])\n\n  const infinityScrollEvent = useCallback(() => {\n    const scrollHeight = document.documentElement.scrollHeight\n    const scrollTop = document.documentElement.scrollTop\n    const clientHeight = document.documentElement.clientHeight\n    if ((scrollHeight - scrollTop) <= (clientHeight * 2.5)) {\n      if (!throttle) {\n        throttle = setTimeout(() => {\n          throttle = null\n          if (sliceLen < data.length) {\n            setSliceLen(sliceLen + loadSize)\n          }\n        }, 300)\n      }\n    }\n  }, [sliceLen, data.length, loadSize])\n\n  useEffect(() => {\n    window.addEventListener('scroll', infinityScrollEvent)\n    return () => window.removeEventListener('scroll', infinityScrollEvent)\n  }, [infinityScrollEvent])\n\n  useEffect(() => {\n    setLazyData(data.slice(0, sliceLen))\n  }, [data, sliceLen])\n\n  return {\n    data: lazyData\n  }\n}\n\nexport default useInfinityScroll\n","import Image from 'next/image'\nimport { NextPage } from 'next'\nimport { useRecoilValue } from 'recoil'\nimport { Box, Container, Grid, GridItem, Text, Spacer, Flex } from '@chakra-ui/react'\n\nimport { PostData, postsDataSelector } from '../../stores/posts'\nimport Link from 'next/link'\nimport { useRef } from 'react'\nimport { imageLoader } from '../../utils/loader'\nimport useInfinityScroll from '../shared/useInfinityScroll'\n\nconst PostCardGrid = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n  const { data } = useInfinityScroll<PostData>(files, 8)\n\n  return (\n    <Flex flexDirection='column' padding={['0 1.5em 0 1.5em', '0 2.5em 0 2.5em', '0 4em 0 4em']}>\n      <Text fontSize={['4xl', '4xl', '5xl']} textAlign='center' fontWeight='normal' margin='1em 0 0em 0'>Recent Articles</Text>\n      <Text fontSize={['2xl', '2xl', '3xl']} color='gray.500' fontWeight='light' textAlign='center' margin='0em 0 4em 0'>Various Articles</Text>\n      <Grid templateColumns={['repeat(1, 1fr)', 'repeat(1, 1fr)', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']} gap={6}>\n        {data.map((file, idx) => {\n          return (\n            <PostCard\n              key={idx}\n              data={file}>\n            </PostCard>\n          )\n        })}\n      </Grid>\n    </Flex>\n  )\n}\n\ninterface PostCardProps {\n  data: PostData;\n}\n\nconst PostCard: NextPage<PostCardProps> = ({ data }) => {\n  const titleTextRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <Link href={`/post/${data.frontmatter.category}/${data.slug}`} passHref={true}>\n      <GridItem w='100%' h='480px' overflow='hidden' cursor='pointer' margin='0 0 2em 0'\n        onMouseOver={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'underline'\n          }\n        }}\n        onMouseOut={() => {\n          if (titleTextRef.current) {\n            titleTextRef.current.style.textDecoration = 'none'\n          }\n        }}\n      >\n        <Container width='100%' height='100%' padding='0'>\n          <Box width='100%' height='300px' borderRadius='16px' position='relative'>\n            <Image\n              alt={`${data.frontmatter.category}-${data.slug}`}\n              src={`/post/${data.frontmatter.category}/${data.slug}/${data.frontmatter.coverImage}`}\n              layout='fill'\n              objectFit='cover'\n              loader={imageLoader}\n              unoptimized={true}\n              priority={true}\n            >\n            </Image>\n          </Box>\n          <Box width='100%' height='120px'>\n            <Spacer height='0.5em'></Spacer>\n            <Text className='title' ref={titleTextRef} fontSize='2xl' color='black' fontWeight='normal'>\n              {data.frontmatter.title}\n            </Text>\n            <Spacer height='0.1em'></Spacer>\n            <Text className='summary' fontSize='md' color='gray.600' fontWeight='light' textOverflow='ellipsis'>\n              {data.frontmatter.summary ? data.frontmatter.summary : ''}\n            </Text>\n            <Spacer height='0.5em'></Spacer>\n            <Text fontSize='lg' fontWeight='light' color='gray.500'>\n              {data.frontmatter.date}\n            </Text>\n          </Box>\n        </Container>\n      </GridItem>\n    </Link>\n  )\n}\n\nexport default PostCardGrid\n","import Image from 'next/image'\nimport { Box, Flex, Text } from '@chakra-ui/react'\nimport Link from 'next/link'\nimport { useRef, useState } from 'react'\nimport { VscArrowLeft, VscArrowRight } from 'react-icons/vsc'\nimport { useRecoilValue } from 'recoil'\nimport { postsDataSelector } from '../../stores/posts'\nimport { imageLoader } from '../../utils/loader'\n\nconst ImageSlider = () => {\n  const { files } = useRecoilValue(postsDataSelector)\n  const topTen = files.slice(0, 10)\n  const imageSliderRef = useRef<HTMLDivElement>(null)\n  const imageBoxRef = useRef<HTMLDivElement>(null)\n  const [isPrevBtnShow, setIsPrevBtnShow] = useState<boolean>(false)\n  const [isNextBtnShow, setIsNextBtnShow] = useState<boolean>(true)\n\n  const sliderMove = (dir: number): void => {\n    if (imageSliderRef.current && imageBoxRef.current) {\n      const boxWidth: number = imageBoxRef.current.offsetWidth\n      let nextLeft = imageSliderRef.current.scrollLeft + (boxWidth * 1.3 * dir)\n      if (nextLeft > 0) {\n        setIsPrevBtnShow(true)\n      }\n      if (nextLeft < (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        setIsNextBtnShow(true)\n      }\n      if (nextLeft <= 0) {\n        nextLeft = 0\n        setIsPrevBtnShow(false)\n      } else if (nextLeft >= (imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth)) {\n        nextLeft = imageSliderRef.current.scrollWidth - imageSliderRef.current.clientWidth\n        setIsNextBtnShow(false)\n      }\n      imageSliderRef.current.scrollLeft = nextLeft\n    }\n  }\n\n  return (\n    <Flex position='relative' margin='0 0 4em 0'>\n      <Flex id='image-slider' ref={imageSliderRef} width='100%' padding={['0 1.5em 0 1.5em', '0 2.5em 0 2.5em', '0 4em 0 4em']} overflow='hidden' position='relative' scrollBehavior='smooth'>\n        {topTen.map((file, idx) => {\n          return (\n            <Link key={idx} href={`/post/${file.frontmatter.category}/${file.slug}`} passHref={true}>\n              <Box\n                id='image-box'\n                ref={imageBoxRef}\n                width={['240px', '360px', '480px']}\n                height={['320px', '400px', '520px']}\n                position='relative'\n                overflow='hidden'\n                flexShrink='0'\n                cursor='pointer'\n              >\n                <Box\n                  position='relative'\n                  width='100%'\n                  height='100%'\n                  transition='1s ease'\n                  opacity='1.0'\n                  _hover={{\n                    opacity: '0.8',\n                    transform: 'scale(1.3)',\n                    background: 'blackAlpha.600'\n                  }}\n                >\n                  <Image\n                    alt={`${file.frontmatter.category}-${file.slug}`}\n                    src={`/post/${file.frontmatter.category}/${file.slug}/${file.frontmatter.coverImage}`}\n                    layout='fill'\n                    objectFit='cover'\n                    loader={imageLoader}\n                    unoptimized={true}\n                    priority={true}\n                  ></Image>\n                </Box>\n                <Box\n                  position='absolute'\n                  top='0'\n                  left='0'\n                  width='100%'\n                  height='100%'\n                  background='blackAlpha.500'\n                  pointerEvents='none'\n                ></Box>\n                <Text\n                  className='title'\n                  fontSize={['2xl', '3xl', '4xl']}\n                  fontWeight='normal'\n                  textAlign='center'\n                  position='absolute'\n                  width='100%'\n                  padding='0 1em 0 1em'\n                  top='50%'\n                  left='50%'\n                  transform='translate(-50%, -50%)'\n                  color='white'\n                  pointerEvents='none'\n                >\n                  {file.frontmatter.title}\n                </Text>\n              </Box>\n            </Link>\n          )\n        })}\n      </Flex>\n      <div>\n        <Box\n          cursor='pointer'\n          aria-label='prev'\n          display={isPrevBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(-1)}\n          width={['1.5em', '2em', '2em', '3em', '3em']}\n          height={['1.5em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          left={['1%', '2%', '4%']}\n          outline='none'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        >\n          <Box display='flex' justifyContent='center' alignItems='center' width='100%' height='100%'>\n            <VscArrowLeft opacity='0.7' aria-label='prev'></VscArrowLeft>\n          </Box>\n        </Box>\n        <Box\n          cursor='pointer'\n          aria-label='next'\n          display={isNextBtnShow ? 'flex' : 'none'}\n          onClick={() => sliderMove(1)}\n          width={['1.5em', '2em', '2em', '3em', '3em']}\n          height={['1.5em', '2em', '2em', '3em', '3em']}\n          fontSize='42px'\n          position='absolute'\n          borderRadius='50%'\n          padding='20px'\n          top='50%'\n          right={['1%', '2%', '4%']}\n          outline='none'\n          transform='translate(-4%, -50%)'\n          background='white'\n          opacity='0.8'\n        >\n          <Box display='flex' justifyContent='center' alignItems='center' width='100%' height='100%'>\n            <VscArrowRight opacity='0.7' aria-label='next'></VscArrowRight>\n          </Box>\n        </Box>\n      </div>\n    </Flex>\n  )\n}\n\nexport default ImageSlider\n","import type { NextPage } from 'next'\nimport { useEffect } from 'react'\nimport { useSetRecoilState } from 'recoil'\n\nimport { Box, Flex, Text } from '@chakra-ui/react'\n\nimport { PostsData, postsDataState } from '../stores/posts'\nimport PostCardGrid from '../components/index/postCardGrid'\nimport ImageSlider from '../components/index/imageSlider'\nimport { getPosts } from '../utils/loadMarkdownFiles'\nimport Head from 'next/head'\n\ninterface HomeProps {\n  posts: PostsData[];\n}\n\nconst Home: NextPage<HomeProps> = ({ posts }) => {\n  const setPostsData = useSetRecoilState(postsDataState)\n\n  useEffect(() => {\n    setPostsData(posts)\n  }, [posts, setPostsData])\n\n  return (\n    <>\n      <Head>\n        <meta name=\"description\" content=\"This is for Developer\"></meta>\n      </Head>\n      <Box padding='84px 0em 4em 0em'>\n        <Flex flexDirection='column' justifyContent='center' alignItems='flex-start' padding={['1em 1.5em 4em 1.5em', '1em 2.5em 4em 2.5em', '1em 4em 4em 4em']}>\n          <Text fontSize={['3xl', '4xl', '5xl']} color='black' fontWeight='normal' padding='0'>\n            This is for Developer\n          </Text>\n          <Text fontSize={['2xl', '3xl', '4xl']} color='gray.600' fontWeight='light'>\n            🖥 프론트엔드 개발에 관한 모든 것\n          </Text>\n          <Text fontSize={['2xl', '3xl', '4xl']} color='gray.400' fontWeight='light'>\n            # Javascript # React\n          </Text>\n        </Flex>\n        <ImageSlider></ImageSlider>\n        <PostCardGrid></PostCardGrid>\n      </Box>\n    </>\n  )\n}\n\nexport async function getStaticProps () {\n  return {\n    props: {\n      posts: getPosts()\n    }\n  }\n}\n\nexport default Home\n"],"names":["window","__NEXT_P","push","throttle","data","loadSize","useState","sliceLen","setSliceLen","lazyData","setLazyData","infinityScrollEvent","useCallback","document","documentElement","scrollHeight","scrollTop","clientHeight","setTimeout","length","useEffect","addEventListener","removeEventListener","slice","PostCard","titleTextRef","useRef","Link","href","frontmatter","category","slug","passHref","GridItem","w","h","overflow","cursor","margin","onMouseOver","current","style","textDecoration","onMouseOut","Container","width","height","padding","Box","borderRadius","position","Image","alt","src","coverImage","layout","objectFit","loader","imageLoader","unoptimized","priority","Spacer","Text","className","ref","fontSize","color","fontWeight","title","textOverflow","summary","date","files","useRecoilValue","postsDataSelector","useInfinityScroll","Flex","flexDirection","textAlign","Grid","templateColumns","gap","map","file","idx","topTen","imageSliderRef","imageBoxRef","isPrevBtnShow","setIsPrevBtnShow","isNextBtnShow","setIsNextBtnShow","sliderMove","dir","boxWidth","offsetWidth","nextLeft","scrollLeft","scrollWidth","clientWidth","id","scrollBehavior","flexShrink","transition","opacity","_hover","transform","background","top","left","pointerEvents","div","aria-label","display","onClick","outline","justifyContent","alignItems","VscArrowLeft","right","VscArrowRight","posts","setPostsData","useSetRecoilState","postsDataState","Head","meta","name","content","ImageSlider","PostCardGrid"],"sourceRoot":""}