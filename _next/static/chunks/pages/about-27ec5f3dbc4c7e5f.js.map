{"version":3,"file":"static/chunks/pages/about-27ec5f3dbc4c7e5f.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,SACA,WACE,OAAO,EAAQ,U,wICyEvB,UAjEoC,SAAQ,G,IAALC,EAAK,EAALA,MACCC,GAAAA,EAAAA,EAAAA,UAAiB,IAAhDC,EAA+BD,EAAoB,GAAtCE,EAAkBF,EAAoB,GAQ1D,OANAG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAeL,EAAMM,SAASC,MAAK,SAACC,GAClCL,EAAeK,QAEhB,CAACR,EAAMM,QAASH,KAEb,QACHM,EAAAA,GAAI,CAACC,cAAc,SAASC,QAAQ,oB,mBAClCC,EAAAA,GAAG,CAACC,MAAM,OAAOC,OAAO,OAAOC,WAAW,mBAAmBC,cAAc,OAAOC,SAAS,WAAWC,IAAI,IAAIC,KAAK,O,QACnHP,EAAAA,GAAG,CAACK,SAAS,WAAWC,IAAI,MAAME,MAAM,O,kBACtCC,EAAAA,EAAc,CAACC,KAAK,MAAMC,IAAI,yB,QAEhCX,EAAAA,GAAG,CAACC,MAAM,cAAcF,QAAQ,Y,UAC9BX,EAAMwB,YAAYC,SAAM,QACtBC,EAAAA,GAAI,CAACC,SAAS,M,SAAO3B,EAAMwB,YAAYC,SAEzCzB,EAAMwB,YAAYI,UAAO,QACvBF,EAAAA,GAAI,CAACG,MAAM,W,SAAY7B,EAAMwB,YAAYI,UAE3C5B,EAAMwB,YAAYM,QAAK,QACrBJ,EAAAA,GAAI,CAACb,MAAM,cAAckB,OAAO,YAAYF,MAAM,W,UAAW,wB,QAE3DG,IAAC,CAACC,KAAO,UAAiC,OAAxBjC,EAAMwB,YAAYM,O,SAClC9B,EAAMwB,YAAYM,WAIxB9B,EAAMwB,YAAYU,MAAG,QACnBR,EAAAA,GAAI,CAACG,MAAM,W,UAAW,wB,QAEpBG,IAAC,CAACC,KAAMjC,EAAMwB,YAAYU,IAAKC,OAAO,SAASC,IAAI,a,SACjDpC,EAAMwB,YAAYU,SAIxBlC,EAAMwB,YAAYa,OAAI,QACpBC,EAAAA,GAAK,CAACC,UAAU,MAAMR,OAAO,c,SAE1B/B,EAAMwB,YAAYa,KAAKG,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAI,SAACC,EAAKC,GAC3D,OAAM,QACHC,EAAAA,GAAK,CAAWlC,QAAQ,IAAImC,aAAa,MAAMC,YAAY,O,SAAS,KAAQ,OAAJJ,IAA7DC,Y,QAOvBhC,EAAAA,GAAG,C,kBACDoC,MAAG,CAACC,UAAU,YAAYC,wBAAyB,CAAEC,OAAQjD,Y,2bC5DvD,SAAeG,EAAgB+C,G,OAAhB/C,EAAc,sB,SAAdA,I,OAAAA,EAAc,YAA7B,SAAQ,EAAuB+C,G,IACtCC,E,iFAAeC,GAAAA,GAASC,IAAI/C,KAAMgD,QAAQJ,G,cAA1CC,EAAS,EAAH,K,kBACLA,EAAOI,Y,4CAF4B,yB","sources":["webpack://_N_E/?75d0","webpack://_N_E/./pages/about.tsx","webpack://_N_E/./utils/markdownToHtml.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/about\",\n      function () {\n        return require(\"private-next-pages/about.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/about\"])\n      });\n    }\n  ","import { Badge, Box, Flex, Stack, Text } from '@chakra-ui/react'\nimport { NextPage } from 'next'\nimport { useEffect, useState } from 'react'\nimport CircularAvatar from '../components/shared/circularAvatar'\nimport { AboutData } from '../stores/about'\nimport { getAbout } from '../utils/loadMarkdownFiles'\nimport markdownToHtml from '../utils/markdownToHtml'\n\ninterface AboutProps {\n  about: AboutData;\n}\n\nconst About: NextPage<AboutProps> = ({ about }) => {\n  const [htmlContent, setHtmlContent] = useState<string>('')\n\n  useEffect(() => {\n    markdownToHtml(about.content).then((html) => {\n      setHtmlContent(html)\n    })\n  }, [about.content, setHtmlContent])\n\n  return (\n    <Flex flexDirection='column' padding='100px 4em 4em 4em'>\n      <Box width='100%' height='11em' background='rgba(0,0,0,0.01)' pointerEvents='none' position='absolute' top='0' left='0'></Box>\n      <Box position='absolute' top='5em' right='12em'>\n        <CircularAvatar size='3xl' src='/about/avatar.jpg'></CircularAvatar>\n      </Box>\n      <Box width='fit-content' padding='6em 0 0 0'>\n        {about.frontmatter.author && (\n          <Text fontSize='5xl'>{about.frontmatter.author}</Text>\n        )}\n        {about.frontmatter.summary && (\n          <Text color='gray.400'>{about.frontmatter.summary}</Text>\n        )}\n        {about.frontmatter.email && (\n          <Text width='fit-content' margin='1em 0 0 0' color='gray.600'>\n            ‚úâÔ∏è&nbsp;&nbsp;\n            <a href={`mailto:${about.frontmatter.email}`}>\n              {about.frontmatter.email}\n            </a>\n          </Text>\n        )}\n        {about.frontmatter.url && (\n          <Text color='gray.600'>\n            üîó&nbsp;&nbsp;\n            <a href={about.frontmatter.url} target='_blank' rel='noreferrer'>\n              {about.frontmatter.url}\n            </a>\n          </Text>\n        )}\n        {about.frontmatter.tags && (\n          <Stack direction='row' margin='1.5em 0 0 0'>\n            {(\n              about.frontmatter.tags.replace(' ', '').split(',').map((tag, idx) => {\n                return (\n                  <Badge key={idx} padding='1' borderRadius='4px' colorScheme='blue'>{`# ${tag}`}</Badge>\n                )\n              })\n            )}\n          </Stack>\n        )}\n      </Box>\n      <Box>\n        <div className='post-body' dangerouslySetInnerHTML={{ __html: htmlContent }}></div>\n      </Box>\n    </Flex>\n  )\n}\n\nexport async function getStaticProps () {\n  return {\n    props: {\n      about: getAbout()\n    }\n  }\n}\n\nexport default About\n","import remark from 'remark'\nimport html from 'remark-html'\n\nexport default async function markdownToHtml (markdown: any) {\n  const result = await remark().use(html).process(markdown)\n  return result.toString()\n}\n"],"names":["window","__NEXT_P","push","about","useState","htmlContent","setHtmlContent","useEffect","markdownToHtml","content","then","html","Flex","flexDirection","padding","Box","width","height","background","pointerEvents","position","top","left","right","CircularAvatar","size","src","frontmatter","author","Text","fontSize","summary","color","email","margin","a","href","url","target","rel","tags","Stack","direction","replace","split","map","tag","idx","Badge","borderRadius","colorScheme","div","className","dangerouslySetInnerHTML","__html","markdown","result","remark","use","process","toString"],"sourceRoot":""}