{"version":3,"file":"static/chunks/pages/post/[category]/[slug]-d0ceb4101b57aa79.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,0BACA,WACE,OAAO,EAAQ,U,8JC8IvB,UA/HkC,SAC7B,G,IAAHC,EAAI,EAAJA,KAEAC,GADQ,EAARC,SACW,EAAXD,aACAE,EAAO,EAAPA,QAEsCC,GAAAA,EAAAA,EAAAA,UAAiB,IAAhDC,EAA+BD,EAAoB,GAAtCE,EAAkBF,EAAoB,GACpDG,GAAkBC,EAAAA,EAAAA,QAAyB,MAE3CC,GAAkBC,EAAAA,EAAAA,cAAY,WAC9BH,EAAgBI,UAClBJ,EAAgBI,QAAQC,MAAMC,UAAa,oBAA4C,OAAzBhB,OAAOiB,YAAc,IAAI,MACvFP,EAAgBI,QAAQC,MAAMG,QAAW,GAA+B,OAA7B,EAAIlB,OAAOiB,YAAc,MAEtE,IAAME,EAAWC,SAASC,eAAe,aACrCrB,OAAOsB,SAAW,KAAOH,EAC3BA,EAASI,UAAYnB,EAAYoB,MACxBxB,OAAOyB,QAAU,KAAON,IACjCA,EAASI,UAAY,MAEtB,CAACnB,EAAYoB,QAwBhB,OAtBAE,EAAAA,EAAAA,YAAU,WACR,IAAMP,EAAWC,SAASC,eAAe,aACzC,OAAO,WACDF,IACFA,EAASI,UAAY,OAGxB,CAACnB,KAEJsB,EAAAA,EAAAA,YAAU,WAER,OADA1B,OAAO2B,iBAAiB,SAAUf,GAC3B,WACLZ,OAAO4B,oBAAoB,SAAUhB,MAEtC,CAACA,KAEJc,EAAAA,EAAAA,YAAU,YACRG,EAAAA,EAAAA,GAAevB,GAASwB,MAAK,SAACC,GAC5BtB,EAAesB,QAEhB,CAACzB,EAASG,KAEP,c,mBAEDuB,EAAAA,QAAI,C,mBACFR,QAAK,C,SAAEpB,EAAYoB,S,QACnBS,OAAI,CAACC,KAAK,cAAc5B,QAAU,GAAuBF,OAArBA,EAAYoB,MAAM,KAAuB,OAApBpB,EAAY+B,e,QAEvEC,EAAAA,GAAG,CAACC,SAAS,WAAWC,QAAS,CAAC,uBAAwB,uBAAwB,oB,mBAChFF,EAAAA,GAAG,CACFC,SAAS,WACTE,SAAS,SACTC,IAAI,OACJC,KAAM,CAAC,QAAS,QAAS,OACzBC,MAAO,CAAC,QAAS,QAAS,OAC1BC,OAAO,O,kBAENP,EAAAA,GAAG,CAACQ,IAAKlC,EAAiBmC,MAAM,OAAOF,OAAO,OAAON,SAAS,W,kBAC5DS,EAAAA,QAAK,CACJC,OAAO,OACPC,UAAU,QACVC,IAAM,GAA0B9C,OAAxBC,EAAYC,SAAS,KAAQ,OAALF,GAChC+C,IAAM,SAAgC/C,OAAxBC,EAAYC,SAAS,KAAWD,OAARD,EAAK,KAA0B,OAAvBC,EAAY+C,YAC1DC,OAAQC,EAAAA,S,QAIbjB,EAAAA,GAAG,CAACC,SAAS,WAAWG,IAAI,OAAOC,KAAM,CAAC,QAAS,QAAS,OAAQC,MAAO,CAAC,QAAS,QAAS,OAAQC,OAAO,OAAOW,gBAAgB,qB,mBAClIC,EAAAA,GAAI,CAACC,WAAW,SAASnB,SAAS,WAAWQ,MAAM,OAAOP,QAAS,CAAC,kBAAmB,kBAAmB,eAAgBE,IAAI,MAAMC,KAAK,MAAMzB,UAAU,wBAAwByC,UAAU,SAASC,WAAY,CAAC,IAAK,IAAK,KAAMC,SAAU,CAAC,MAAO,MAAO,OAAQC,MAAM,Q,SAASxD,EAAYoB,QAC7RpB,EAAYyD,WAAQ,QAClBN,EAAAA,GAAI,CAACC,WAAW,QAAQnB,SAAS,WAAWG,IAAI,MAAMC,KAAK,MAAMH,QAAS,CAAC,kBAAmB,kBAAmB,eAAgBtB,UAAU,wBAAwB2C,SAAU,CAAC,KAAM,KAAM,OAAQF,UAAU,SAASG,MAAM,W,SAAYxD,EAAYyD,e,QAGvPzB,EAAAA,GAAG,CAAC0B,OAAO,c,kBACTC,MAAG,CAACC,UAAU,YAAYC,wBAAyB,CAAEC,OAAQ1D,e,2bC5FzD,SAAeqB,EAAgBsC,G,OAAhBtC,EAAc,sB,SAAdA,I,OAAAA,EAAc,YAA7B,SAAQ,EAAuBsC,G,IACtCC,E,iFAAeC,GAAAA,GAASC,IAAIvC,KAAMwC,QAAQJ,G,cAA1CC,EAAS,EAAH,K,kBACLA,EAAOI,Y,4CAF4B,yB","sources":["webpack://_N_E/?b24e","webpack://_N_E/./pages/post/[category]/[slug].tsx","webpack://_N_E/./utils/markdownToHtml.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[category]/[slug]\",\n      function () {\n        return require(\"private-next-pages/post/[category]/[slug].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/post/[category]/[slug]\"])\n      });\n    }\n  ","import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport type { NextPage } from 'next'\nimport { Box, Text } from '@chakra-ui/react'\nimport { FrontMatter } from '../../../stores/posts'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport markdownToHtml from '../../../utils/markdownToHtml'\nimport Image from 'next/image'\nimport { imageLoader } from '../../../utils/loader'\nimport Head from 'next/head'\n\ninterface PostProps {\n  slug: string;\n  category: string;\n  frontmatter: FrontMatter;\n  content: string;\n}\n\nconst Post: NextPage<PostProps> = ({\n  slug,\n  category,\n  frontmatter,\n  content\n}) => {\n  const [htmlContent, setHtmlContent] = useState<string>('')\n  const imageZoomBoxRef = useRef<HTMLImageElement>(null)\n\n  const imageZoomScroll = useCallback(() => {\n    if (imageZoomBoxRef.current) {\n      imageZoomBoxRef.current.style.transform = `scale(calc(1.0 + ${window.pageYOffset / 500}))`\n      imageZoomBoxRef.current.style.opacity = `${1 - window.pageYOffset / 500}`\n    }\n    const topTitle = document.getElementById('top-title')\n    if (window.scrollY >= 120 && topTitle) {\n      topTitle.innerHTML = frontmatter.title\n    } else if (window.screenY < 120 && topTitle) {\n      topTitle.innerHTML = ''\n    }\n  }, [frontmatter.title])\n\n  useEffect(() => {\n    const topTitle = document.getElementById('top-title')\n    return () => {\n      if (topTitle) {\n        topTitle.innerHTML = ''\n      }\n    }\n  }, [frontmatter])\n\n  useEffect(() => {\n    window.addEventListener('scroll', imageZoomScroll)\n    return () => {\n      window.removeEventListener('scroll', imageZoomScroll)\n    }\n  }, [imageZoomScroll])\n\n  useEffect(() => {\n    markdownToHtml(content).then((html) => {\n      setHtmlContent(html)\n    })\n  }, [content, setHtmlContent])\n\n  return (\n    <>\n      <Head>\n        <title>{frontmatter.title}</title>\n        <meta name=\"description\" content={`${frontmatter.title}-${frontmatter.summary}`}></meta>\n      </Head>\n      <Box position='relative' padding={['35vh 1.5em 4em 1.5em', '35vh 2.5em 4em 2.5em', '35vh 4em 4em 4em']}>\n        <Box\n          position='absolute'\n          overflow='hidden'\n          top='64px'\n          left={['1.5em', '2.5em', '4em']}\n          right={['1.5em', '2.5em', '4em']}\n          height='35vh'\n        >\n          <Box ref={imageZoomBoxRef} width='100%' height='100%' position='relative'>\n            <Image\n              layout='fill'\n              objectFit='cover'\n              alt={`${frontmatter.category}-${slug}`}\n              src={`/post/${frontmatter.category}/${slug}/${frontmatter.coverImage}`}\n              loader={imageLoader}\n            ></Image>\n          </Box>\n        </Box>\n        <Box position='absolute' top='64px' left={['1.5em', '2.5em', '4em']} right={['1.5em', '2.5em', '4em']} height='35vh' backgroundColor='rgba(0, 0, 0, 0.4)'>\n          <Text fontWeight='medium' position='absolute' width='100%' padding={['0 0.5em 0 0.5em', '0 0.5em 0 0.5em', '0 1em 0 1em']} top='40%' left='50%' transform='translate(-50%, -40%)' textAlign='center' lineHeight={[1.2, 1.2, 1.5]} fontSize={['3xl', '4xl', '5xl']} color='white'>{frontmatter.title}</Text>\n          {frontmatter.shortcut && (\n            <Text fontWeight='light' position='absolute' top='70%' left='50%' padding={['0 0.5em 0 0.5em', '0 0.5em 0 0.5em', '0 1em 0 1em']} transform='translate(-50%, -70%)' fontSize={['md', 'xl', '2xl']} textAlign='center' color='gray.100'>{frontmatter.shortcut}</Text>\n          )}\n        </Box>\n        <Box margin='100px 0 0 0'>\n          <div className='post-body' dangerouslySetInnerHTML={{ __html: htmlContent }}></div>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport async function getStaticPaths () {\n  const files = fs.readdirSync(path.join('./public/post'))\n  const paths = files.map(dirName => {\n    const dirs = fs.readdirSync(path.join(`./public/post/${dirName}`))\n    const slugs = dirs.map(dir => {\n      return dir.replace('.md', '')\n    })\n    const params = slugs.map((slug) => {\n      return {\n        params: {\n          category: dirName,\n          slug: slug\n        }\n      }\n    })\n    return params\n  })\n  return {\n    paths: paths.flat(),\n    fallback: false\n  }\n}\n\ninterface getStaticPropsProperty {\n  params: {\n    category: string;\n    slug: string;\n  }\n}\n\nexport async function getStaticProps ({ params: { category, slug } }: getStaticPropsProperty) {\n  const markdownWithMeta = fs.readFileSync(path.join(`./public/post/${category}/${slug}`, `${slug}.md`), 'utf-8')\n  const { data: frontmatter, content } = matter(markdownWithMeta)\n\n  return {\n    props: {\n      slug: slug,\n      category: category,\n      frontmatter: frontmatter,\n      content: content\n    }\n  }\n}\n\nexport default Post\n","import remark from 'remark'\nimport html from 'remark-html'\n\nexport default async function markdownToHtml (markdown: any) {\n  const result = await remark().use(html).process(markdown)\n  return result.toString()\n}\n"],"names":["window","__NEXT_P","push","slug","frontmatter","category","content","useState","htmlContent","setHtmlContent","imageZoomBoxRef","useRef","imageZoomScroll","useCallback","current","style","transform","pageYOffset","opacity","topTitle","document","getElementById","scrollY","innerHTML","title","screenY","useEffect","addEventListener","removeEventListener","markdownToHtml","then","html","Head","meta","name","summary","Box","position","padding","overflow","top","left","right","height","ref","width","Image","layout","objectFit","alt","src","coverImage","loader","imageLoader","backgroundColor","Text","fontWeight","textAlign","lineHeight","fontSize","color","shortcut","margin","div","className","dangerouslySetInnerHTML","__html","markdown","result","remark","use","process","toString"],"sourceRoot":""}