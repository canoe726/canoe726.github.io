{"version":3,"file":"static/chunks/pages/post/[category]/[slug]-ff121afa5c98d4a8.js","mappings":"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","sources":["webpack://_N_E/?b24e","webpack://_N_E/./components/shared/utterance.tsx","webpack://_N_E/./components/slug/nextPosts.tsx","webpack://_N_E/./pages/post/[category]/[slug].tsx","webpack://_N_E/./utils/markdownToHtml.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[category]/[slug]\",\n      function () {\n        return require(\"private-next-pages/post/[category]/[slug].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/post/[category]/[slug]\"])\n      });\n    }\n  ","import { Box } from '@chakra-ui/react'\nimport { useEffect, useRef } from 'react'\n\nconst Utterance = () => {\n  const commentRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (commentRef.current) {\n      if (commentRef.current.firstChild) {\n        commentRef.current.removeChild(commentRef.current.firstChild)\n      }\n      const utterance = document.createElement('script')\n      const utteranceConfig = {\n        src: 'https://utteranc.es/client.js',\n        repo: 'canoe726/canoe726.github.io',\n        'issue-term': 'url',\n        label: 'âœ¨ðŸ’¬Postâœ¨-',\n        theme: 'github-light',\n        crossorigin: 'anonymous',\n        async: 'true'\n      }\n      Object.entries(utteranceConfig).forEach(([key, value]) => {\n        utterance.setAttribute(key, value)\n      })\n      commentRef.current.appendChild(utterance)\n    }\n  }, [])\n\n  return (\n    <Box margin=\"0 0 1.5em 0\" padding={['0 1.5em 4em 1.5em', '0 2.5em 4em 2.5em', '0 4em 4em 4em']}>\n      <div id=\"comment\" ref={commentRef}></div>\n    </Box>\n  )\n}\n\nexport default Utterance\n","import { Box, Divider, Flex, Text } from '@chakra-ui/react'\nimport { NextPage } from 'next'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { useEffect, useRef, useState } from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { PostData, postsDataState } from '../../stores/posts'\nimport { imageLoader } from '../../utils/loader'\n\nconst NextPosts = () => {\n  const sliceLen = 10\n  const postsData = useRecoilValue(postsDataState)\n  const [randomPosts, setRandomPosts] = useState<PostData[]>([])\n  const [relatedPosts, setRelatedPosts] = useState<PostData[]>([])\n  const router = useRouter()\n  const { category } = router.query\n\n  useEffect(() => {\n    const allPosts = postsData.map((postData) => {\n      return postData.files.flat()\n    }).flat()\n    if (allPosts.length > 0) {\n      const allPostsLen = allPosts.length >= sliceLen ? sliceLen : allPosts.length\n      const randTen: number[] = []\n      while (randTen.length < allPostsLen) {\n        const randInt = Math.floor(Math.random() * allPostsLen)\n        if (randTen.indexOf(randInt) === -1) {\n          randTen.push(randInt)\n        }\n      }\n      const randFivePosts: PostData[] = []\n      randTen.forEach((postIdx) => {\n        randFivePosts.push(allPosts[postIdx])\n      })\n      setRandomPosts(randFivePosts)\n    }\n  }, [postsData])\n\n  useEffect(() => {\n    const categoryPosts = postsData\n      .filter((postData) => {\n        return postData.category === category\n      })\n      .map((postData) => {\n        return postData.files\n      })\n      .slice(0, sliceLen)\n      .flat()\n    setRelatedPosts(categoryPosts)\n  }, [postsData, category])\n\n  return (\n    <Flex justifyContent='center' alignItems='center' flexDirection='column' padding={['0 1.5em 4em 1.5em', '0 2.5em 4em 2.5em', '0 4em 4em 4em']}>\n      <Divider margin='0 0 4em 0' width='100%' height='1px' background='rgba(0, 0, 0, 0.05)'></Divider>\n      <NextPostList\n        title={'Related Posts'}\n        data={relatedPosts}\n        margin={['0 0 0 0']}\n      ></NextPostList>\n      <NextPostList\n        title={'Random Posts'}\n        data={randomPosts}\n        margin={['2em 0 0 0']}\n      ></NextPostList>\n    </Flex>\n  )\n}\n\ninterface NextPostListProps {\n  title: string;\n  data: PostData[];\n  margin: string[];\n}\n\nconst NextPostList: NextPage<NextPostListProps> = ({ title, data, margin }) => {\n  const titleRef = useRef<HTMLParagraphElement[]>([])\n\n  return (\n    <Box width='100%' margin={margin}>\n      <Text fontSize='1.2em' fontWeight='normal'>{title}</Text>\n      <Box width='100%' overflow='auto' margin='1em 0 0 0'>\n        <Flex>\n          {data.map((postData, idx) => {\n            return (\n              <Link key={idx} href={`/post/${postData.frontmatter.category}/${postData.slug}`} passHref={true}>\n                <Box paddingBottom='4px' position='relative' cursor='pointer'\n                  onMouseOver={() => {\n                    if (titleRef.current[idx]) {\n                      titleRef.current[idx].style.textDecoration = 'underline'\n                    }\n                  }}\n                  onMouseOut={() => {\n                    if (titleRef.current[idx]) {\n                      titleRef.current[idx].style.textDecoration = 'none'\n                    }\n                  }}\n                >\n                  <Box width={['180px', '220px', '240px']} height={['180px', '220px', '240px']} position='relative'>\n                    <Image\n                      layout='fill'\n                      objectFit='cover'\n                      alt={`${postData.frontmatter.category}-${postData.slug}`}\n                      src={`/post/${postData.frontmatter.category}/${postData.slug}/${postData.frontmatter.coverImage}`}\n                      loader={imageLoader}\n                      unoptimized={true}\n                      priority={true}\n                    ></Image>\n                  </Box>\n                  <Box top='0' left='0' borderRight='1px solid white' width={['180px', '220px', '240px']} height={['180px', '220px', '240px']} position='absolute' background='rgba(0, 0, 0, 0.4)'>\n                    <Text ref={el => { titleRef.current[idx] = el! }} pointerEvents='none' width='100%' fontSize={['1.1em', '1.1em', '1.3em']} textAlign='center' padding='0 1em 0 1em' color='white' position='absolute' fontWeight='normal' top='50%' left='50%' transform='translate(-50%, -50%)'>\n                      {postData.frontmatter.title}\n                    </Text>\n                  </Box>\n                </Box>\n              </Link>\n            )\n          })}\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n\nexport default NextPosts\n","import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport type { NextPage } from 'next'\nimport { Box, Container, Flex, Text } from '@chakra-ui/react'\nimport { FrontMatter, PostsData, postsDataState } from '../../../stores/posts'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport markdownToHtml from '../../../utils/markdownToHtml'\nimport Image from 'next/image'\nimport { imageLoader } from '../../../utils/loader'\nimport Head from 'next/head'\nimport { getPosts } from '../../../utils/loadMarkdownFiles'\nimport { useSetRecoilState } from 'recoil'\nimport Utterance from '../../../components/shared/utterance'\nimport NextPosts from '../../../components/slug/nextPosts'\n\ninterface PostProps {\n  posts: PostsData[];\n  slug: string;\n  category: string;\n  frontmatter: FrontMatter;\n  content: string;\n}\n\nconst Post: NextPage<PostProps> = ({\n  posts,\n  slug,\n  category,\n  frontmatter,\n  content\n}) => {\n  const [htmlContent, setHtmlContent] = useState<string>('')\n  const imageZoomBoxRef = useRef<HTMLImageElement>(null)\n  const setPostsData = useSetRecoilState(postsDataState)\n\n  useEffect(() => {\n    setPostsData(posts)\n  }, [posts, setPostsData])\n\n  const imageZoomScroll = useCallback(() => {\n    if (imageZoomBoxRef.current) {\n      imageZoomBoxRef.current.style.transform = `scale(calc(1.0 + ${window.pageYOffset / 500}))`\n      imageZoomBoxRef.current.style.opacity = `${1 - window.pageYOffset / 500}`\n    }\n    const topTitle = document.getElementById('top-title')\n    if (window.scrollY >= 120 && topTitle) {\n      topTitle.innerHTML = `${frontmatter.title.slice(0, 1).toUpperCase()}${frontmatter.title.slice(1)}`\n    } else if (window.screenY < 120 && topTitle) {\n      topTitle.innerHTML = ''\n    }\n  }, [frontmatter.title])\n\n  useEffect(() => {\n    const topTitle = document.getElementById('top-title')\n    return () => {\n      if (topTitle) {\n        topTitle.innerHTML = ''\n      }\n    }\n  }, [frontmatter])\n\n  useEffect(() => {\n    window.addEventListener('scroll', imageZoomScroll)\n    return () => {\n      window.removeEventListener('scroll', imageZoomScroll)\n    }\n  }, [imageZoomScroll])\n\n  useEffect(() => {\n    markdownToHtml(content).then((html) => {\n      setHtmlContent(html)\n    })\n  }, [content, setHtmlContent])\n\n  return (\n    <>\n      <Head>\n        <title>{frontmatter.title}</title>\n        <meta name=\"description\" content={`${frontmatter.title}-${frontmatter.summary}`}></meta>\n      </Head>\n      <Container padding='0' maxWidth='1320px'>\n        <Box position='relative' padding={['35vh 1.5em 2em 1.5em', '35vh 2.5em 2em 2.5em', '35vh 4em 2em 4em']}>\n          <Box\n            position='absolute'\n            overflow='hidden'\n            top='64px'\n            left={['1.5em', '2.5em', '4em']}\n            right={['1.5em', '2.5em', '4em']}\n            height='35vh'\n            maxHeight='420px'\n          >\n            <Box ref={imageZoomBoxRef} width='100%' height='100%' position='relative'>\n              <Image\n                layout='fill'\n                objectFit='cover'\n                alt={`${frontmatter.category}-${slug}`}\n                src={`/post/${frontmatter.category}/${slug}/${frontmatter.coverImage}`}\n                loader={imageLoader}\n                unoptimized={true}\n                priority={true}\n              ></Image>\n            </Box>\n          </Box>\n          <Box position='absolute' top='64px' left={['1.5em', '2.5em', '4em']} right={['1.5em', '2.5em', '4em']} height='35vh' maxHeight='420px' backgroundColor='rgba(0, 0, 0, 0.4)'>\n            <Text fontWeight='normal' position='absolute' width='100%' padding={['0 0.5em 0 0.5em', '0 0.5em 0 0.5em', '0 1em 0 1em']} top='40%' left='50%' transform='translate(-50%, -40%)' textAlign='center' lineHeight={[1.2, 1.2, 1.5]} fontSize={['3xl', '4xl', '5xl']} color='white'>{frontmatter.title}</Text>\n            {frontmatter.shortcut && (\n              <Text fontWeight='light' position='absolute' top='70%' left='50%' padding={['0 0.5em 0 0.5em', '0 0.5em 0 0.5em', '0 1em 0 1em']} transform='translate(-50%, -70%)' fontSize={['md', 'xl', '2xl']} textAlign='center' color='gray.100'>{frontmatter.shortcut}</Text>\n            )}\n          </Box>\n          <Flex margin='64px 0 0 0' width='100%' justifyContent='center' alignItems='center'>\n            <article className='post-body' style={{ width: '100%', maxWidth: '1320px' }} dangerouslySetInnerHTML={{ __html: htmlContent }}></article>\n          </Flex>\n        </Box>\n        <NextPosts></NextPosts>\n        <Utterance></Utterance>\n        {/* <ScrollBtn></ScrollBtn> */}\n      </Container>\n    </>\n  )\n}\n\nexport async function getStaticPaths () {\n  const files = fs.readdirSync(path.join('./public/post'))\n  const paths = files.map(dirName => {\n    const dirs = fs.readdirSync(path.join(`./public/post/${dirName}`))\n    const slugs = dirs.map(dir => {\n      return dir.replace('.md', '')\n    })\n    const params = slugs.map((slug) => {\n      return {\n        params: {\n          category: dirName,\n          slug: slug\n        }\n      }\n    })\n    return params\n  })\n  return {\n    paths: paths.flat(),\n    fallback: false\n  }\n}\n\ninterface getStaticPropsProperty {\n  params: {\n    category: string;\n    slug: string;\n  }\n}\n\nexport async function getStaticProps ({ params: { category, slug } }: getStaticPropsProperty) {\n  const markdownWithMeta = fs.readFileSync(path.join(`./public/post/${category}/${slug}`, `${slug}.md`), 'utf-8')\n  const { data: frontmatter, content } = matter(markdownWithMeta)\n\n  return {\n    props: {\n      posts: getPosts(),\n      slug: slug,\n      category: category,\n      frontmatter: frontmatter,\n      content: content\n    }\n  }\n}\n\nexport default Post\n","const hljs = require('highlight.js')\nconst markDownIt = require('markdown-it')({\n  html: true,\n  xhtmlOut: true,\n  breaks: false,\n  langPrefix: 'language-',\n  linkify: false,\n  highlight: function (str: string, lang: string) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return '<pre class=\"hljs\"><code>' +\n          hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n          '</code></pre>'\n      } catch (__) {}\n    }\n    return '<pre class=\"hljs\"><code>' + markDownIt.utils.escapeHtml(str) + '</code></pre>'\n  }\n})\n\nexport default async function markdownToHtml (markdown: any) {\n  const renderMarkdown: string = markDownIt.render(markdown)\n  return renderMarkdown.replaceAll('<a href', '<a target=\"_blank\" href')\n}\n"],"names":["window","__NEXT_P","push","commentRef","useRef","useEffect","current","firstChild","removeChild","utterance","document","createElement","Object","entries","src","repo","label","theme","crossorigin","async","forEach","key","value","setAttribute","appendChild","Box","margin","padding","div","id","ref","NextPostList","title","data","titleRef","width","Text","fontSize","fontWeight","overflow","Flex","map","postData","idx","Link","href","frontmatter","category","slug","passHref","paddingBottom","position","cursor","onMouseOver","style","textDecoration","onMouseOut","height","Image","layout","objectFit","alt","coverImage","loader","imageLoader","unoptimized","priority","top","left","borderRight","background","el","pointerEvents","textAlign","color","transform","postsData","useRecoilValue","postsDataState","useState","randomPosts","setRandomPosts","relatedPosts","setRelatedPosts","useRouter","query","allPosts","files","flat","length","allPostsLen","randTen","randInt","Math","floor","random","indexOf","randFivePosts","postIdx","categoryPosts","filter","slice","justifyContent","alignItems","flexDirection","Divider","posts","content","htmlContent","setHtmlContent","imageZoomBoxRef","setPostsData","useSetRecoilState","imageZoomScroll","useCallback","pageYOffset","opacity","topTitle","getElementById","scrollY","innerHTML","toUpperCase","screenY","addEventListener","removeEventListener","markdownToHtml","then","html","Head","meta","name","summary","Container","maxWidth","right","maxHeight","backgroundColor","lineHeight","shortcut","article","className","dangerouslySetInnerHTML","__html","NextPosts","Utterance","hljs","require","markDownIt","xhtmlOut","breaks","langPrefix","linkify","highlight","str","lang","getLanguage","language","ignoreIllegals","__","utils","escapeHtml","markdown","renderMarkdown","render","replaceAll"],"sourceRoot":""}